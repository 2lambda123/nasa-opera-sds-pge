RunConfig:
  Name: OPERA-BASE-PGE-TEST-CONFIG

  Groups:

    PGE:
      PGENameGroup:
        PGEName: BASE_PGE

      InputFilesGroup:
        InputFilePaths:
          - input/input_file01.h5
          - input/input_file02.h5

      DynamicAncillaryFilesGroup:
        AncillaryFileMap:
          DEMFile: input/input_dem.vrt

      ProductPathGroup:
        OutputProductPath: base_pge_test/outputs/
        ScratchPath: base_pge_test/scratch/

      PrimaryExecutable:
        ProductIdentifier: EXAMPLE
        ProgramPath: bash
        ProgramOptions:
          - -c
          - echo START;
          - echo "Traceback (most recent call last):";
          - echo "  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main";
          - echo "    \"__main__\", fname, loader, pkg_name)";
          - echo "  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code";
          - echo "    exec code in run_globals";
          - echo "  File \"/root/env/common/test/test/__main__.py\", line 5, in <module>";
          - echo "    main()";
          - echo "  File \"/root/env/common/test/test/cli/parser.py\", line 55, in main";
          - echo "    run_script(args)";
          - echo "  File \"/root/env/common/test/test/cli/runner.py\", line 124, in run_script";
          - echo "    exec_script(args.script, scope=globals(), root=True)";
          - echo "  File \"/root/workspace/group/test_regression_utils.py\", line 123, in exec_script";
          - echo "    cli_exec_script(*args,**kwargs)";
          - echo "  File \"/root/env/common/test/test/cli/runner.py\", line 186, in exec_script";
          - echo "    exec(compile(code, scriptpath, 'exec')) in scope";
          - echo "  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main";
          - echo "    \"__main__\", fname, loader, pkg_name)";
          - echo "  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code";
          - echo "    exec code in run_globals";
          - echo "  File \"/root/env/common/test/test/__main__.py\", line 5, in <module>";
          - echo "    main()";
          - echo "  File \"/root/env/common/test/test/cli/parser.py\", line 55, in main";
          - echo "    run_script(args)";
          - echo "  File \"/root/env/common/test/test/cli/runner.py\", line 124, in run_script";
          - echo "    exec_script(args.script, scope=globals(), root=True)";
          - echo "  File \"/root/env/common/test/test/cli/runner.py\", line 186, in exec_script";
          - echo "    exec(compile(code, scriptpath, 'exec')) in scope";
          - echo "  File \"/root/env/common/mator/mator/mator.py\", line 520, in start";
          - echo "    raise IOError(\"RPC server not started!\")";
          - >-
            echo "IOError: RPC server not started!";
          - exit 123;
        ErrorCodeBase: 100000
        SchemaPath: test/data/sample_sas_schema.yaml
        IsoTemplatePath: sample_iso_template.xml.jinja2

      QAExecutable:
        Enabled: False
        ProgramPath: /opt/QualityAssurance/sample_qa.py
        ProgramOptions:
         -  --debug

      DebugLevelGroup:
        DebugSwitch: False
        ExecuteViaShell: True

    SAS:
      input_subset:
        list_of_frequencies:
          A:
          B:
        fullcovariance: False

      dem_download:
        source:
        top_left:
          x:
          y:
        bottom_right:
          x:
          y:

      pre_process:
        azimuth_looks: 1
        range_looks: 1

      rtc:
        output_type: gamma0
        algorithm_type: area_projection
        input_terrain_radiometry: sigma0
        rtc_min_value_db: -30

      geocode:
        algorithm_type: area_projection
        memory_mode: auto
        geogrid_upsampling: 1
        save_nlooks: True
        save_rtc: True
        abs_rad_cal: 1
        outputEPSG:
        output_posting:
          A:
            x_posting:
            y_posting:
          B:
            x_posting:
            y_posting:
        x_snap: 100
        y_snap: 100
        top_left:
          y_abs:
          x_abs:
        bottom_right:
          y_abs:
          x_abs:

      noise_correction:
        apply_correction: False
        correction_type: None

      worker:
        internet_access: False
        gpu_enabled: False

      QA:
        validate: False
        quality: False
